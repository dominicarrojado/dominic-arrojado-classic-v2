{"version":3,"sources":["../node_modules/moveto/dist/moveTo.js"],"names":["MoveTo","defaults","tolerance","duration","easing","container","window","callback","easeOutQuart","t","b","c","d","mergeObject","obj1","obj2","obj3","Object","keys","forEach","propertyName","countScrollTop","HTMLElement","scrollTop","pageYOffset","options","arguments","length","undefined","easeFunctions","this","prototype","registerTrigger","dom","_this","href","getAttribute","target","document","getElementById","substring","body","domOptions","key","value","concat","replace","$1","toLowerCase","isNaN","parseInt","_getOptionsFromTriggerDom","listener","e","preventDefault","move","addEventListener","removeEventListener","_this2","lastYOffset","distance","getBoundingClientRect","top","from","startTime","loop","currentTime","currentYOffset","timeElapsed","val","scroll","requestAnimationFrame","addEaseFunction","name","fn","module","exports"],"mappings":"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","file":"static/js/4.02e83daf.chunk.js","sourcesContent":["/*!\n * MoveTo - A lightweight scroll animation javascript library without any dependency.\n * Version 1.8.2 (28-06-2019 14:30)\n * Licensed under MIT\n * Copyright 2019 Hasan AydoÄŸdu <hsnaydd@gmail.com>\n */\n\n\"use strict\";\n\nvar MoveTo = function () {\n  /**\n   * Defaults\n   * @type {object}\n   */\n  var defaults = {\n    tolerance: 0,\n    duration: 800,\n    easing: 'easeOutQuart',\n    container: window,\n    callback: function callback() {}\n  };\n  /**\n   * easeOutQuart Easing Function\n   * @param  {number} t - current time\n   * @param  {number} b - start value\n   * @param  {number} c - change in value\n   * @param  {number} d - duration\n   * @return {number} - calculated value\n   */\n\n  function easeOutQuart(t, b, c, d) {\n    t /= d;\n    t--;\n    return -c * (t * t * t * t - 1) + b;\n  }\n  /**\n   * Merge two object\n   *\n   * @param  {object} obj1\n   * @param  {object} obj2\n   * @return {object} merged object\n   */\n\n\n  function mergeObject(obj1, obj2) {\n    var obj3 = {};\n    Object.keys(obj1).forEach(function (propertyName) {\n      obj3[propertyName] = obj1[propertyName];\n    });\n    Object.keys(obj2).forEach(function (propertyName) {\n      obj3[propertyName] = obj2[propertyName];\n    });\n    return obj3;\n  }\n\n  ;\n  /**\n   * Converts camel case to kebab case\n   * @param  {string} val the value to be converted\n   * @return {string} the converted value\n   */\n\n  function kebabCase(val) {\n    return val.replace(/([A-Z])/g, function ($1) {\n      return '-' + $1.toLowerCase();\n    });\n  }\n\n  ;\n  /**\n   * Count a number of item scrolled top\n   * @param  {Window|HTMLElement} container\n   * @return {number}\n   */\n\n  function countScrollTop(container) {\n    if (container instanceof HTMLElement) {\n      return container.scrollTop;\n    }\n\n    return container.pageYOffset;\n  }\n\n  ;\n  /**\n   * MoveTo Constructor\n   * @param {object} options Options\n   * @param {object} easeFunctions Custom ease functions\n   */\n\n  function MoveTo() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var easeFunctions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    this.options = mergeObject(defaults, options);\n    this.easeFunctions = mergeObject({\n      easeOutQuart: easeOutQuart\n    }, easeFunctions);\n  }\n  /**\n   * Register a dom element as trigger\n   * @param  {HTMLElement} dom Dom trigger element\n   * @param  {function} callback Callback function\n   * @return {function|void} unregister function\n   */\n\n\n  MoveTo.prototype.registerTrigger = function (dom, callback) {\n    var _this = this;\n\n    if (!dom) {\n      return;\n    }\n\n    var href = dom.getAttribute('href') || dom.getAttribute('data-target'); // The element to be scrolled\n\n    var target = href && href !== '#' ? document.getElementById(href.substring(1)) : document.body;\n    var options = mergeObject(this.options, _getOptionsFromTriggerDom(dom, this.options));\n\n    if (typeof callback === 'function') {\n      options.callback = callback;\n    }\n\n    var listener = function listener(e) {\n      e.preventDefault();\n\n      _this.move(target, options);\n    };\n\n    dom.addEventListener('click', listener, false);\n    return function () {\n      return dom.removeEventListener('click', listener, false);\n    };\n  };\n  /**\n   * Move\n   * Scrolls to given element by using easeOutQuart function\n   * @param  {HTMLElement|number} target Target element to be scrolled or target position\n   * @param  {object} options Custom options\n   */\n\n\n  MoveTo.prototype.move = function (target) {\n    var _this2 = this;\n\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (target !== 0 && !target) {\n      return;\n    }\n\n    options = mergeObject(this.options, options);\n    var distance = typeof target === 'number' ? target : target.getBoundingClientRect().top;\n    var from = countScrollTop(options.container);\n    var startTime = null;\n    var lastYOffset;\n    distance -= options.tolerance; // rAF loop\n\n    var loop = function loop(currentTime) {\n      var currentYOffset = countScrollTop(_this2.options.container);\n\n      if (!startTime) {\n        // To starts time from 1, we subtracted 1 from current time\n        // If time starts from 1 The first loop will not do anything,\n        // because easing value will be zero\n        startTime = currentTime - 1;\n      }\n\n      var timeElapsed = currentTime - startTime;\n\n      if (lastYOffset) {\n        if (distance > 0 && lastYOffset > currentYOffset || distance < 0 && lastYOffset < currentYOffset) {\n          return options.callback(target);\n        }\n      }\n\n      lastYOffset = currentYOffset;\n\n      var val = _this2.easeFunctions[options.easing](timeElapsed, from, distance, options.duration);\n\n      options.container.scroll(0, val);\n\n      if (timeElapsed < options.duration) {\n        window.requestAnimationFrame(loop);\n      } else {\n        options.container.scroll(0, distance + from);\n        options.callback(target);\n      }\n    };\n\n    window.requestAnimationFrame(loop);\n  };\n  /**\n   * Adds custom ease function\n   * @param {string}   name Ease function name\n   * @param {function} fn   Ease function\n   */\n\n\n  MoveTo.prototype.addEaseFunction = function (name, fn) {\n    this.easeFunctions[name] = fn;\n  };\n  /**\n   * Returns options which created from trigger dom element\n   * @param  {HTMLElement} dom Trigger dom element\n   * @param  {object} options The instance's options\n   * @return {object} The options which created from trigger dom element\n   */\n\n\n  function _getOptionsFromTriggerDom(dom, options) {\n    var domOptions = {};\n    Object.keys(options).forEach(function (key) {\n      var value = dom.getAttribute(\"data-mt-\".concat(kebabCase(key)));\n\n      if (value) {\n        domOptions[key] = isNaN(value) ? value : parseInt(value, 10);\n      }\n    });\n    return domOptions;\n  }\n\n  return MoveTo;\n}();\n\nif (typeof module !== 'undefined') {\n  module.exports = MoveTo;\n} else {\n  window.MoveTo = MoveTo;\n}"],"sourceRoot":""}